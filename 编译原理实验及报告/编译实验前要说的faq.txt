操作系统和编译器、数据库管理软件被称作三大系统软件。相应的，三门理论课全是计算机专业的重头课。做编译实验之前，三门大家可以回忆一下操作系统的实验，也可以看看数据库的实验。

编译课程的实验，国内外到目前有三种模式：

第一种，是国外高水平模式。教材是龙书等经典，学生早年实验在unix系统上自己做lex，yacc（注意是做，不是用）；现在学生把lex改成flex，yacc改成Bison；然后自己写语义处理，组织符号表，翻译成中间代码和目标代码，并且优化。基本上这些人到了大公司，写的编译代码融入各种实际项目。

第二种，国内外的早年模式。大家可以想想，如果学操作系统就要做个操作系统......不是说国内没有这样做的，比如北大，早年就是一学期上操作系统理论课，然后再来一个学期做个小的操作系统。别看给一个学期，也只做一个小的操作系统，但是要求能跑！北大学生也做得哭爹叫娘。编译器庞大，编译实验做个编译器......想想GCC几百万行的源代码，谁都头大。呃，想想同学们出去，有几个人会去做编译器？但是编译技术很多地方都用到，那么国内外很多学校就做几个单独的实验，词法分析，语法分析，把分析好的简单源程序转化成中间代码，优化，目标代码生成。这样方便学生们亲自动手学习编译技术，理解编译原理。能力强的同学可以做一个比较完整的小型编译器模型，比如前些年清华和中国科技大学做PL0编译器。

第三种，最近这些年来，开源软件方便得到。国内外高校，统统照搬国外比如斯坦福的编译实验训练模式。从源语言，到flex，Bison的使用，再到后面很多开源工具的使用，统统照搬斯坦福或者其它名气大的。这个模式有点本质上进步的，就是把编译面向过程的语言比如PL0，C的编译训练，改成了编译面向对象语言比如Java，C++子集的训练。目前国内清华，中国科技大学，南京大学，还有我们学校大多采用了这种模式。清华后来把实验从一个学期拉长到了两个学期，但是我们学校没有跟着改。这种模式比较显著的一个优点就是成果显著，学生大多都能构造出一个像模像样的编译器，展示给人看。

按照课程组长的要求，“编译实验重要考察学生系统完成一个编译器设计实现能力，提倡使用工具和源码资源。”
“按照往年的经验，实验环境就要花2周时间折腾，然后各种意外，他们要在网上看很多教程，有的会把他们带沟里，但最终都会有很大收获”
“实验结果就是要看编译器的完整实现过程，重点检查关键数据结构和理论课的原理在实验中的对应关系”

编译原理实验南京大学老师写的编译原理实践与指导教程为实验教材，实验教材后面的附录里列出了必要的的软件下载地址。另外，任务书，参考指导材料，实验报告模板等资料已经打包上传到超星等资料目录。

下面的内容属于可选读内容。
----------------------------------------------------------------------------------------------
老师觉得，同学们可以对照自己的能力，选择编译实验的做法。

老师是7班的实验指导老师，7班的同学可以按模式2，尤其是选了我们学校刘铭等老师写的编译原理做教材的同学，按照附录做，也可以选用课程组指定的实验教材按模式3做；甚至源语言也可以不选择类C的高级语言，而是做一个SQL的编译器。
8班的同学，我觉得可以把自己的想法和祝老师协商，按照他的要求来。毕竟他是你们评分老师。

第三种，也就是编译课程组推荐的做法，相对简单，基本上就是照着实验教材一步一步做，因为各大高校做得很多了，网上参考资料也多。

最后强调一句：安装各种没装过的软件之前，一定要先上网查查，看看安装会不会出现什么问题，一定要确保万一出问题能够的恢复系统。不要让安装软件影响到其它正常学习。

THE  END.
===============================================================         